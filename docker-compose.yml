version: '3'

services:

  webserver:
    image: nginx:alpine
    restart: always
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - air_watcher

  co2meter:
    build:
      dockerfile: co2meter.dockerfile
      context: .
    command:
      - python
      - main.py
      - runscheduler
      - --port
      - "8000"
    privileged: true
    restart: always
    expose:
      - "8000"
    networks:
      - air_watcher

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    links:
      - alertmanager:alertmanager
    networks:
      - air_watcher
    restart: always

  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - air_watcher
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    expose:
      - "3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - air_watcher
    restart: always

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  air_watcher:
    driver: bridge
